pipeline {
  agent any

  tools {
    nodejs 'nodejs-20.3.1' // Replace 'nodejs' with the name of your Node.js installation in Jenkins
  }
  
  stages {
    stage('test script') {
      steps {
        sh './scripts/test.sh'
        sleep 1
      }
    }

    stage('Init') {
      // Setup
      steps {
        echo "Init environment"
        sh 'npm install'
        sh '''#!/bin/bash
              echo $USER
        '''
      }
    }

    stage('Test') {
      // Build test image and run test image
      steps {
        sh 'docker build -t cicd-jenkins-demo-test --target test .'
        sh 'docker run --rm --name cicd-jenkins-demo-test cicd-jenkins-demo-test'
      }
    }

    stage('Build') { 
      // Build production image
      steps {
        withCredentials([usernamePassword(credentialsId: '93fbb72d-ca9c-4407-a803-391bce2c42cf', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
          sh 'echo $PASSWORD | docker login -u $USERNAME --password-stdin'
          sh 'docker build -t k8s-demo-01 -t davidko1997/k8s-demo-01 .'
        }
      }
    }

    stage('Deploy') {
      // rollout restart 
      input {
        message "Please select environment"
        ok "Submit"
        submitter "akaadmin,137487842+robert-wan-sos"
        submitterParameter 'approverId'
        parameters {
          choice choices: ['Prod', 'Pre-Prod'], name: 'envType'
        }

      }

      steps {
        echo "Deployment approved to ${envType} by ${approverId}."

        sh 'docker push davidko1997/k8s-demo-01'
        sh '''#/bin/bash
          . ~/.bashrc
          kubectl config set-context lke116074-ctx --namespace demo-app
          kubectl apply -f ./deployment/kubernetes
          kubectl rollout restart deploy jenkins-cicd-demo-web
        '''
      }
    }

    stage('Clean Up') {
      steps {
        echo 'Cleaning local images'
        sh 'docker image prune -f'
      }
    }
  }
}
